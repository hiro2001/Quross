//
//  @file KrsServo1.ino
//  @brief KrsServoSample1
//  @author Kondo Kagaku Co.,Ltd.
//  @date 2017/12/26
//
//  ID:0のサーボをポジション指定で動かす
//  範囲は、左5500 - 中央7500 - 右9500
//  0.5秒ごとに指定数値まで動く
//  ICSの通信にはHardwareSerialを使います。
//


#include <IcsHardSerialClass.h>

const byte EN_PIN = 2;
const long BAUDRATE = 115200;
const int TIMEOUT = 1000;		//通信できてないか確認用にわざと遅めに設定

IcsHardSerialClass krs(&Serial,EN_PIN,BAUDRATE,TIMEOUT);  //インスタンス＋ENピン(2番ピン)およびUARTの指定

int crawl_max=100;
int count=0,j;

int crawl[100][3]={
{8428,7266,10339},
{8424,7249,10347},
{8419,7231,10355},
{8414,7213,10363},
{8409,7196,10370},
{8403,7178,10377},
{8397,7160,10383},
{8390,7142,10390},
{8383,7124,10396},
{8375,7106,10402},
{8367,7087,10407},
{8358,7069,10412},
{8349,7050,10417},
{8340,7032,10422},
{8330,7013,10426},
{8319,6994,10430},
{8308,6976,10434},
{8297,6957,10437},
{8285,6938,10440},
{8272,6919,10443},
{8348,6915,10477},
{8435,6931,10506},
{8528,6968,10529},
{8620,7024,10541},
{8704,7099,10541},
{8773,7189,10526},
{8821,7289,10494},
{8846,7395,10444},
{8845,7499,10376},
{8820,7600,10293},
{8773,7694,10198},
{8708,7780,10093},
{8629,7858,9982},
{8539,7929,9870},
{8443,7992,9759},
{8347,8048,9656},
{8253,8095,9562},
{8167,8131,9482},
{8092,8156,9421},
{8030,8166,9379},
{8047,8149,9403},
{8063,8133,9426},
{8079,8118,9449},
{8094,8102,9471},
{8109,8087,9493},
{8124,8072,9515},
{8138,8057,9537},
{8152,8043,9558},
{8166,8029,9579},
{8179,8014,9600},
{8192,8000,9621},
{8204,7986,9641},
{8216,7972,9661},
{8228,7959,9681},
{8240,7945,9700},
{8251,7931,9719},
{8262,7918,9738},
{8272,7904,9757},
{8283,7890,9775},
{8293,7877,9794},
{8302,7863,9812},
{8312,7850,9829},
{8321,7837,9847},
{8329,7823,9864},
{8338,7810,9881},
{8346,7796,9898},
{8354,7782,9915},
{8361,7769,9931},
{8368,7755,9947},
{8375,7741,9963},
{8382,7728,9979},
{8388,7714,9994},
{8394,7700,10009},
{8400,7686,10024},
{8405,7672,10039},
{8410,7658,10054},
{8415,7643,10068},
{8420,7629,10082},
{8424,7615,10096},
{8428,7600,10110},
{8431,7585,10123},
{8434,7571,10136},
{8437,7556,10149},
{8439,7541,10162},
{8442,7526,10174},
{8443,7510,10186},
{8445,7495,10198},
{8446,7479,10210},
{8447,7464,10222},
{8447,7448,10233},
{8447,7432,10244},
{8447,7416,10254},
{8447,7400,10265},
{8446,7384,10275},
{8444,7367,10285},
{8442,7351,10295},
{8440,7334,10304},
{8438,7317,10313},
{8435,7300,10322},
{8432,7283,10331}
};


void setup() {
  // put your setup code here, to run once:
  krs.begin();  //サーボモータの通信初期設定
}



void loop() {
    delay(500);
    Serial.println("start");
  // put your main code here, to run repeatedly:
  char rCur;
  int i;
    for(j=4;j<7;j++){
      krs.setSpd(j, 70);
    }
    while(count<crawl_max){
        krs.setPos(4,crawl[count][9]);
        rCur = krs.getCur(4);
        i = (int) rCur;
        Serial.print(i);
        krs.setPos(5,crawl[count][10]);
        rCur = krs.getCur(5);
        i = (int) rCur;
        Serial.print(i);
        krs.setPos(6,crawl[count][11]);
        rCur = krs.getCur(6);
        i = (int) rCur;
        Serial.println(i);
        count++;
    }
    count=0;
	delay(500);  
}